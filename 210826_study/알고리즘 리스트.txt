


1.선형(순차)리스트
리스트
큐나 스택과 달리, 데이터를 넣을때
기존 데이터 중간에 끼워넣는 것이 가능한 자료구조
(기존 데이터와 동떨어진 위치에 넣는 것은 불가능하지만 
기존 데이터들 사이에 새로운 데이터를 
삽입,삭제 하는게 가능)

데이터 넣을 때 : 데이터를 밀어서 자리만들고 넣기 
데이터 뺄때 : 데이터를 빼고 빈공간 당기기


2.연결(링크드)리스트

//자료구조를 배열로 구현했을때의 문제점
	//1. 데이터를 꺼내거나 넣을때 나머지 데이터를 모두 옮겨야함.
	//2. 실제로 저장된 데이터가 삭제되진 않음.
	// (변수를 통해 암묵적으로 사용하지 못하도록만 함)
	//3. 배열크기만큼의 메모리공간을 할당 받기 때문에
	// 사용하지 않는 메모리도 계속해서 차지하게 된다.
	//4.배열이기 때문에 배열을 만들때 
	// 지정한 갯수만큼만 저잘할 수 있다.

	//이러한 배열형 자료구조의 문제점을 모두 개선한 구조가
	//링크드 리스트(연결리스트)이다.
	//링크드리스트의 단점은 구조가 다소 복잡하는 단점이 있다.

	push
	1.새로운 데이터를 만들기
	2.새로운 데이터를 넣을 위치를 찾기
		-헤드
		-기존 데이터중 마지막 데이터의 뒤
	3. 기존 데이터가 존대한다면
 	가장 마지막 데이터를 찾기
	4. 찾은 마지막 데이터의 다음 데이터(pNext)에
 	새로 만든 데이터를 대입

3.이진트리






































